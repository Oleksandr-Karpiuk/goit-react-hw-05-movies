{"version":3,"file":"static/js/881.90b0d69d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies__title\":\"Movies_movies__title__nmFDD\",\"movies__form\":\"Movies_movies__form__Zdcl7\",\"movies__input\":\"Movies_movies__input__ZJL4T\",\"movies__btn\":\"Movies_movies__btn__9+7na\",\"movies__list\":\"Movies_movies__list__+pxmY\",\"movies__item\":\"Movies_movies__item__blLkN\",\"movies__link\":\"Movies_movies__link__YoSbB\",\"movies__img\":\"Movies_movies__img__xxUe6\",\"movies__text\":\"Movies_movies__text__TisiF\",\"movies__message\":\"Movies_movies__message__kURRO\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../services/api';\nimport { Dna } from 'react-loader-spinner';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [query, setQuery] = useState(() => searchQuery || '');\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await searchMovie(searchQuery);\n        setData(results);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (searchQuery) {\n      getData();\n    }\n    setQuery('');\n  }, [searchQuery]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <h1 className={css.movies__title}>Search movies</h1>\n      <form onSubmit={handleSubmit} className={css.movies__form}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter a movie name\"\n          onChange={handleChange}\n          className={css.movies__input}\n        />\n        <button type=\"submit\" className={css.movies__btn}>\n          Search\n        </button>\n      </form>\n      <ul className={css.movies__list}>\n        {searchQuery ? (\n          loading ? (\n            <Dna\n              visible={true}\n              height=\"200\"\n              width=\"200\"\n              ariaLabel=\"dna-loading\"\n              wrapperStyle={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n              }}\n              wrapperClass=\"dna-wrapper\"\n            />\n          ) : data?.length > 0 ? (\n            data.map(({ title, id, poster_path }) => (\n              <li key={id} className={css.movies__item}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                  className={css.movies__link}\n                >\n                  <img\n                    src={\n                      poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                        : 'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg'\n                    }\n                    alt={title}\n                    className={css.movies__img}\n                    width={400}\n                    height={600}\n                  />\n                  <p className={css.movies__text}>{title}</p>\n                </Link>\n              </li>\n            ))\n          ) : (\n            <p className={css.movies__message}>\n              No movies with this title were found. Try enter another title.\n            </p>\n          )\n        ) : (\n          <p className={css.movies__message}>\n            Pleace enter any title to search movies.\n          </p>\n        )}\n      </ul>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'fb4e362ef4f8f4291a6c9eb4634b1354',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","setQuery","location","useLocation","useEffect","getData","searchMovie","results","toast","message","className","css","onSubmit","e","preventDefault","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","length","map","title","id","poster_path","to","state","from","src","alt","instance","axios","baseURL","params","api_key","language","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews","queryString"],"sourceRoot":""}