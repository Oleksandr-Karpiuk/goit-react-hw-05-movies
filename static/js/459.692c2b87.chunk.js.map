{"version":3,"file":"static/js/459.692c2b87.chunk.js","mappings":"wQACA,GAAgB,WAAa,yBAAyB,WAAa,yBAAyB,YAAc,0BAA0B,WAAa,yBAAyB,eAAiB,6BAA6B,cAAgB,6B,SCuExO,EAhEa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZJ,GAAW,GAFC,UAGWK,EAAAA,EAAAA,IAAaJ,GAHxB,gBAGJK,EAHI,EAGJA,KACRR,EAAQQ,GAJI,gDAMZC,EAAAA,GAAAA,MAAY,KAAMC,SANN,yBAQZR,GAAW,GARC,4EAAH,qDAWbI,GACD,GAAE,CAACH,KAGF,8BACGF,GACC,SAAC,KAAD,CACEU,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbC,aAAa,iBAET,OAAJrB,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,QAAS,GACjB,gBAAKC,UAAWC,EAAAA,WAAhB,UACE,eAAID,UAAWC,EAAAA,WAAf,SACGxB,EAAKyB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACR,gBAAaN,UAAWC,EAAAA,WAAxB,WACE,gBACEM,IACEF,EACI,iCAAmCA,EACnC,+DAENG,IAAKL,EACLH,UAAWC,EAAAA,eAEb,cAAGD,UAAWC,EAAAA,WAAd,SAA+BE,KAC/B,cAAGH,UAAWC,EAAAA,eAAd,SAAmCG,MAX5BE,EADD,SAkBd,cAAGN,UAAWC,EAAAA,cAAd,SAAiC,mBAIxC,C,8JCpEKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qIAGoBN,EAASO,IAH7B,+CAGKvC,EAHL,EAGKA,KAHL,kBAIIA,EAAKwC,SAJT,2HAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,kFACCa,EADD,iBACmBb,GADnB,kBAGoBG,EAASO,IAAIG,GAHjC,uBAGK1C,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BqB,GAA5B,kFACCa,EADD,iBACmBb,EADnB,8BAGoBG,EAASO,IAAIG,GAHjC,uBAGK1C,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2HAUA,SAAe2C,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,kFACCa,EADD,iBACmBb,EADnB,8BAGoBG,EAASO,IAAIG,GAHjC,uBAGK1C,EAHL,EAGKA,KAHL,kBAIIA,GAJJ,2H","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__wrap\":\"Cast_cast__wrap__dYECt\",\"cast__item\":\"Cast_cast__item__dGjV1\",\"cast__photo\":\"Cast_cast__photo__XIork\",\"cast__name\":\"Cast_cast__name__V7tRY\",\"cast_character\":\"Cast_cast_character__1tyj1\",\"cast__message\":\"Cast_cast__message__KbGPQ\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { Dna } from 'react-loader-spinner';\nimport css from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getMovieCast(movieId);\n        setData(cast);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Dna\n          visible={true}\n          height=\"200\"\n          width=\"200\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          wrapperClass=\"dna-wrapper\"\n        />\n      ) : data?.length > 0 ? (\n        <div className={css.cast__wrap}>\n          <ul className={css.cast__list}>\n            {data.map(({ name, character, profile_path, id }) => (\n              <li key={id} className={css.cast__item}>\n                <img\n                  src={\n                    profile_path\n                      ? 'https://image.tmdb.org/t/p/w92' + profile_path\n                      : 'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg'\n                  }\n                  alt={name}\n                  className={css.cast__photo}\n                />\n                <p className={css.cast__name}>{name}</p>\n                <p className={css.cast_character}>{character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className={css.cast__message}>No data found</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'fb4e362ef4f8f4291a6c9eb4634b1354',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","movieId","useParams","useEffect","getData","getMovieCast","cast","toast","message","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","length","className","css","map","name","character","profile_path","id","src","alt","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","results","getMovieDetails","query","getMovieReviews"],"sourceRoot":""}